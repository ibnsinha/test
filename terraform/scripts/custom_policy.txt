




variable "customer_managed_policies" {
  description = "Map of customer-managed IAM policies where keys are policy names and values are JSON policy documents"
  type        = map(string)
  default     = {}
}



======================


# Create Customer-Managed Policies from JSON
resource "aws_iam_policy" "customer_managed" {
  for_each    = var.customer_managed_policies
  name        = each.key
  description = "Customer-managed policy created by Terraform"
  policy      = each.value
}

# Create IAM Role
resource "aws_iam_role" "generated_role" {
  name               = var.role_name
  assume_role_policy = var.assume_role_policy

  permissions_boundary = var.permissions_boundary != "" ? var.permissions_boundary : null
  tags = var.tags
}

# Attach Created Customer-Managed Policies
resource "aws_iam_role_policy_attachment" "customer_policy_attachments" {
  for_each   = aws_iam_policy.customer_managed
  role       = aws_iam_role.generated_role.name
  policy_arn = each.value.arn
}

# Attach AWS-Managed Policies
resource "aws_iam_role_policy_attachment" "aws_managed_policies" {
  count      = length(var.managed_arns)
  role       = aws_iam_role.generated_role.name
  policy_arn = var.managed_arns[count.index]
}

# Attach Inline Policies
resource "aws_iam_role_policy" "inline_policies" {
  for_each = var.inline_policies
  name     = each.key
  role     = aws_iam_role.generated_role.name
  policy   = each.value
}

